services:
  ticked-service:
    container_name: ticket-service
    build: ./ticket-service
    ports:
      - ${TICKET_SERVICE_PORT}:8080
    env_file:
      - .env

  saved-service:
    container_name: saved-service
    build: ./saved-service
    ports:
      - ${SAVED_SERVICE_PORT}:8080
    env_file:
      - .env

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    env_file:
      - .env

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
    - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    env_file:
      .env

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    env_file:
      - .env
    ports:
      - "${KAFKA_PORT_EXTERNAL}:${KAFKA_PORT_EXTERNAL}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_LISTENERS: INTERNAL://:${KAFKA_PORT_INTERNAL},EXTERNAL://:${KAFKA_PORT_EXTERNAL}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:KAFKA_PORT_INTERNAL,EXTERNAL://kafka:${KAFKA_PORT_EXTERNAL}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  postgres_data:
